name: Android CI (Lint + Test + Build + Email)

on: push

permissions:
  contents: read
  actions: read
  packages: read
  
jobs:
  check-conflicts:
    name: Check for Merge Conflicts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check for merge conflicts
        run: |
          set +H  # Disable history expansion
          if git grep -l '<<<<<<<' -- ':!*.md' ':!*.txt'; then
            echo "::error::Merge conflicts detected!"
            exit 1
          fi
          
          if [ -d ".git/rebase-merge" ] || [ -d ".git/rebase-apply" ]; then
            echo "::error::Rebase in progress - conflicts may exist"
            exit 1
          fi
          
          echo "âœ… No merge conflicts found"

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: check-conflicts  # Enforce merge conflict check first
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Run ktlint
        uses: serso/ktlint-github-action@v1.0
        with:
          args: --color --reporter=plain?group_by_file --reporter=checkstyle,output=build/reports/ktlint/ktlint-checkstyle.xml

      - name: Upload ktlint report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ktlint-report
          path: build/reports/ktlint/

      - name: Run Android Lint
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lintDebug

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}

      - name: Run unit tests
        run: ./gradlew testDebugUnitTest

      - name: Run instrumented tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          arch: x86_64
          script: ./gradlew connectedDebugAndroidTest
          timeout: 30  # Increased timeout

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      
      - name: Make gradlew executable
        run: chmod +x gradlew
        
      - uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          
      - run: ./gradlew assembleDebug
      
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk
          
      - name: Upload build reports
        uses: actions/upload-artifact@v4
        with:
          name: build-reports
          path: |
            app/build/reports/
            build/reports/

  notify:
    name: Send Email Notification
    runs-on: ubuntu-latest
    needs: [lint, test, build]
    if: always()
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          pattern: '*-*'
          merge-multiple: true

      - name: Prepare notification
        id: prepare
        run: |
          echo "LINT_STATUS=${{ needs.lint.result }}" >> $GITHUB_ENV
          echo "TEST_STATUS=${{ needs.test.result }}" >> $GITHUB_ENV
          echo "BUILD_STATUS=${{ needs.build.result }}" >> $GITHUB_ENV
          
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_APP_PASSWORD }}  # Use app-specific password
          subject: "Android Build: ${{ env.BUILD_STATUS || 'pending' }} | Lint: ${{ env.LINT_STATUS }} | Tests: ${{ env.TEST_STATUS }}"
          body: |
            Workflow: ${{ github.workflow }}
            Triggered by: ${{ github.actor }}
            Branch: ${{ github.ref }}
            
            Jobs Status:
            - Lint: ${{ env.LINT_STATUS }}
            - Tests: ${{ env.TEST_STATUS }}
            - Build: ${{ env.BUILD_STATUS }}
            
            Details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Artifacts:
            - Ktlint Report: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
            - APK: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
            - Build Reports: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts
          to: samar.m.yasin@gmail.com
          from: GitHub Actions
          attach_files: |
            artifacts/app-debug-apk/app-debug.apk
            artifacts/ktlint-report/*
